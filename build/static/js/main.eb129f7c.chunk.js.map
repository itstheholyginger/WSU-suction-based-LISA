{"version":3,"sources":["AppMode.js","components/Welcome.jsx","components/variables/RandVars.jsx","components/variables/OtherVars.jsx","components/Header.jsx","resources/template.jsx","components/apiClient.js","resources/labels.js","components/DataForm.jsx","resources/units.js","components/graphs/RVDist.jsx","components/graphs/FOSFreq.jsx","components/graphs/PFbyZ.jsx","components/graphs/SSbyZ.jsx","components/graphs/SSbySe.jsx","components/DisplayGraphs.jsx","components/tables/FOSTable.jsx","components/tables/RVTable.jsx","components/Loading.jsx","components/Display.jsx","components/App.jsx","index.js"],"names":["AppMode","WELCOME","DATAFORM","DISPLAY","Object","freeze","WelcomePage","className","React","Component","WelcomeBanner","AppDescription","ButtonContainer","Button","variant","RandVar","props","handleDistChange","selectedOption","selected","target","value","name","state","this","conf","dist","data","Form","Row","label","Group","as","Col","controlId","Label","Control","onChange","defaultValue","handleChange","handleNondetChange","style","width","type","min","placeholder","handleDetChange","NondetRandVarDisplayer","TruncNormalVar","e","bind","step","low","UniformVar","LognormalVar","TruncLognormalVar","ConstantVar","ConstVar","NumRandVars","val","Saturation","Header","Navbar","bg","Brand","href","Toggle","Collapse","Text","title","testing","numVars","sat","randVars","c","high","mean","stdev","c_r","const_val","phi","k_s","a","n","logmean","logstdev","constVars","gamma","gamma_w","slope","q","H_wt","z_step","BASE_URL","axios","create","baseURL","timeout","headers","LABELS","DataFormPage","varName","key","newData","setState","detVal","handleConstVarChange","handleNumVarChange","number","handleZVarChange","z","handleSatChange","handleAnalysisChange","handleFluxChange","flux","handleFluxAdd","append","handleFluxRemove","index","splice","onSubmit","console","log","preventDefault","API","post","then","res","changeMode","undefined","onClick","DataFormSelector","UNITS","RVDistGraph","setOptions","options","push","rv","RVBar","getTickFormat","t","toExponential","toFixed","datapoints","domainPadding","overflow","theme","V","material","containerComponent","labels","datum","x","y","axisLabel","padding","tickFormat","tickCount","dependentAxis","nextProps","prevState","valsArr","vals","freqObj","forEach","rounded","Number","error","FOSFreq","componentDidMount","sorted","sort","FreqHistFOS","getCount","max","list","i","tickValues","length","fs_vals","PFbyZ","detGetDatapoints","dp","probFail","ticks","getTickVals","cur","sharedAxisStyles","tickLabels","fontSize","fontStyle","stroke","parent","border","orientation","invertAxis","SSbyZ","ss","getMaxSS","map","Array","Math","ceil","keys","maxSS","domain","interpolation","SSbySe","Se","DisplayGraphs","getGraphDownloadData","csvData","curZ","row","Tabs","defaultActiveKey","id","Tab","eventKey","FOSTable","getFSDownloadData","fs","getRows","sortedZ","Table","striped","hover","bordered","size","FSRowDisplay","RVTable","getRVDownloadData","detRows","vars","getTable","table","RandVarRowDisplayDet","RandVarRowDisplayNondet","Loading","loading","done","intent","Spinner","SIZE_STANDARD","DisplayPage","setTimeout","getResults","r","results","get","modeTitle","modeToPage","App","handleChangeMode","newMode","mode","ModePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb129f7c.chunk.js","sourcesContent":["const AppMode = {\n    WELCOME: 'WelcomeMode',\n    DATAFORM: 'DataFormMode',\n    DISPLAY: 'DisplayMode'\n}\n\nObject.freeze(AppMode)\nexport default AppMode\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nclass WelcomePage extends React.Component {\n  render () {\n    return (\n      <div className=\"welcome-page\">\n        <div className=\"welcome-banner\">\n          <WelcomeBanner />\n        </div>\n\n        <div className=\"app-desc\">\n          <AppDescription />\n        </div>\n\n        <div className=\"button-container\">\n          <ButtonContainer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass WelcomeBanner extends React.Component {\n  render () {\n    return (\n      <div className=\"welcome-banner\">\n        <div className=\"welcome-text\">Welcome to LISA</div>\n      </div>\n    )\n  }\n}\n\nclass AppDescription extends React.Component {\n  render () {\n    return (\n      <div className=\"\">\n        <h2>Application Description</h2>\n        <br />\n        <p>Description of the LISA project. History and what it does.</p>\n      </div>\n    )\n  }\n}\n\nclass ButtonContainer extends React.Component {\n  render () {\n    return (\n      <div className=\"\">\n        <Button variant=\"success\">New Data</Button>\n        <Button variant=\"info\">Load Old Data by ID</Button>\n      </div>\n    )\n  }\n}\n\nexport default WelcomePage\n","import React, { Component, Fragment } from 'react'\nimport { Form, Col } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nclass RandVar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    componentDidMount() {\n        this.props.handleDistChange(this.props.name, 'truncnormal')\n    }\n\n    static propTypes = {\n        handleDistChange: PropTypes.func,\n        conf: PropTypes.string,\n        name: PropTypes.string,\n        label: PropTypes.string,\n        handleNondetChange: PropTypes.func,\n        handleDetChange: PropTypes.func,\n        data: PropTypes.object\n    };\n\n    handleDistChange = selectedOption => {\n        var selected = selectedOption.target.value\n        this.props.handleDistChange(this.props.name, selected)\n    };\n\n    render() {\n        const conf = this.props.conf\n        var dist = this.props.data.dist\n        if (conf === 'nondet') {\n            return (\n                <Form.Row className=\"formRandVarContainerRow\">\n                    <div className=\"randVarContainer\">\n                        <Form.Row className=\"formLabel\">\n                            <h6>{this.props.label}</h6>\n                        </Form.Row>\n\n                        <Form.Row className=\"randVarInfo\">\n                            <Form.Group\n                                as={Col}\n                                className=\"col-sm-4\"\n                                controlId=\"formDist\"\n                            >\n                                <Form.Label> Distribution </Form.Label>\n                                <Form.Control\n                                    as=\"select\"\n                                    className=\"input\"\n                                    onChange={this.handleDistChange}\n                                >\n                                    <option value=\"truncnormal\" defaultValue>\n                                        Truncated Normal\n                                    </option>\n                                    <option value=\"lognormal\">Lognormal</option>\n                                    <option value=\"trunclognormal\">Truncated Lognormal</option>\n                                    <option value=\"uniform\">Uniform</option>\n                                    <option value=\"constant\">Constant</option>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group as={Col} className=\"col-sm-8\">\n                                <div className=\"randVarInputs\">\n                                    <NondetRandVarDisplayer\n                                        dist={dist}\n                                        name={this.props.name}\n                                        data={this.props.data}\n                                        handleChange={\n                                            this.props.handleNondetChange\n                                        }\n                                    />\n                                </div>\n                            </Form.Group>\n                        </Form.Row>\n                    </div>\n                </Form.Row>\n            )\n        } else if (conf === 'det') {\n            return (\n                <Form.Row className=\"formRandVarContainerRow\">\n                    <div className=\"randVarContainer\">\n                        <Form.Row\n                            className=\"randVarInfo\"\n                            style={{ width: '50%' }}\n                        >\n                            <Form.Label> {this.props.label}</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                min={0}\n                                placeholder=\"Enter value\"\n                                onChange={this.handleDetChange}\n                            />\n                        </Form.Row>\n                    </div>\n                </Form.Row>\n            )\n        }\n    }\n}\n\n// class DetRandVarDisplayer extends Component {\n//     static propTypes = {\n//         handleChange: PropTypes.func,\n//         data: PropTypes.object,\n//         name: PropTypes.string\n//     }\n//     render () {\n//         return (\n//         )\n//     }\n// }\n\nclass NondetRandVarDisplayer extends Component {\n    static propTypes = {\n        handleChange: PropTypes.func,\n        data: PropTypes.object,\n        dist: PropTypes.string,\n        name: PropTypes.string\n    };\n\n    render() {\n        const dist = this.props.dist\n\n        switch (dist) {\n            case 'uniform':\n                return (\n                    <UniformVar\n                        name={this.props.name}\n                        data={this.props.data}\n                        handleChange={this.props.handleChange}\n                    />\n                )\n            case 'truncnormal':\n                return (\n                    <TruncNormalVar\n                        name={this.props.name}\n                        data={this.props.data}\n                        handleChange={this.props.handleChange}\n                    />\n                )\n            case 'lognormal':\n                return (\n                    <LognormalVar\n                        name={this.props.name}\n                        data={this.props.data}\n                        handleChange={this.props.handleChange}\n                    />\n                )\n            case 'trunclognormal':\n                return (\n                    <TruncLognormalVar\n                        name={this.props.name}\n                        data={this.props.data}\n                        handleChange={this.props.handleChange}\n                    />\n                )\n            case 'constant':\n                return (\n                    <ConstantVar\n                        name={this.props.name}\n                        data={this.props.data}\n                        handleChange={this.props.handleChange}\n                    />\n                )\n            default:\n                return (\n                    <p>\n                        Error: invalid distribution selection\n                    </p>\n                )\n        }\n    }\n}\n\nclass TruncNormalVar extends Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    static propTypes = {\n        handleChange: PropTypes.func,\n        data: PropTypes.object,\n        name: PropTypes.string\n    };\n\n    handleChange = e => {\n        this.props.handleChange(this.props.name, e.target.name, e.target.value)\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formInput\">\n                        <Form.Label>Mean</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            name=\"mean\"\n                            onChange={this.handleChange.bind(this)}\n                            placeholder=\"Enter mean\"\n                        />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formInput\">\n                        <Form.Label>Std Dev</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            placeholder=\"Enter standard deviation\"\n                            name=\"stdev\"\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group\n                        as={Col}\n                        className=\"input\"\n                        controlId=\"formInput\"\n                    >\n                        <Form.Label>Low</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            name=\"low\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter low\"\n                        />\n                    </Form.Group>\n\n                    <Form.Group\n                        as={Col}\n                        className=\"input\"\n                        controlId=\"formInput\"\n                    >\n                        <Form.Label>High</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={this.props.data.low}\n                            step={0.0000000001}\n                            name=\"high\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter high\"\n                        />\n                    </Form.Group>\n                </Form.Row>\n            </Fragment>\n        )\n    }\n}\n\nclass UniformVar extends Component {\n    static propTypes = {\n        handleChange: PropTypes.func,\n        data: PropTypes.object,\n        name: PropTypes.string\n    };\n\n    handleChange = e => {\n        this.props.handleChange(this.props.name, e.target.name, e.target.value)\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Form.Row>\n\n                    <Form.Group as={Col} className=\"input\" controlId=\"formInput\">\n                        <Form.Label>Low</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            name=\"low\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter low\"\n                        />\n                    </Form.Group>\n\n                    <Form.Group as={Col} className=\"input\" controlId=\"formInput\">\n                        <Form.Label>High</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={this.props.data.low}\n                            step={0.000000001}\n                            name=\"high\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter high\"\n                        />\n                    </Form.Group>\n                </Form.Row>\n            </Fragment>\n        )\n    }\n}\n\nclass LognormalVar extends Component {\n    static propTypes = {\n        handleChange: PropTypes.func,\n        data: PropTypes.object,\n        name: PropTypes.string\n    };\n\n    handleChange = e => {\n        this.props.handleChange(this.props.name, e.target.name, e.target.value)\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Form.Row>\n                    <Form.Group as={Col} className=\"input\" controlId=\"formInput\">\n                        <Form.Label>Logmean</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            name=\"logmean\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter logmean\"\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} className=\"input\" controlId=\"formInput\">\n                        <Form.Label>Logstdev</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            name=\"logstdev\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter logstdev\"\n                        />\n                    </Form.Group>\n                </Form.Row>\n            </Fragment>\n        )\n    }\n}\n\nclass TruncLognormalVar extends Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    static propTypes = {\n        handleChange: PropTypes.func,\n        data: PropTypes.object,\n        name: PropTypes.string\n    };\n\n    handleChange = e => {\n        this.props.handleChange(this.props.name, e.target.name, e.target.value)\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formInput\">\n                        <Form.Label>Logmean</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            name=\"logmean\"\n                            onChange={this.handleChange.bind(this)}\n                            placeholder=\"Enter logmean\"\n                        />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formInput\">\n                        <Form.Label>Logstdev</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            placeholder=\"Enter logstdev\"\n                            name=\"logstdev\"\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group\n                        as={Col}\n                        className=\"input\"\n                        controlId=\"formInput\"\n                    >\n                        <Form.Label>Low</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            step={0.0000000001}\n                            name=\"low\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter low\"\n                        />\n                    </Form.Group>\n\n                    <Form.Group\n                        as={Col}\n                        className=\"input\"\n                        controlId=\"formInput\"\n                    >\n                        <Form.Label>High</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={this.props.data.low}\n                            step={0.0000000001}\n                            name=\"high\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter high\"\n                        />\n                    </Form.Group>\n                </Form.Row>\n            </Fragment>\n        )\n    }\n}\n\nclass ConstantVar extends Component {\n    static propTypes = {\n        handleChange: PropTypes.func,\n        data: PropTypes.object,\n        name: PropTypes.string\n    };\n\n    handleChange = e => {\n        this.props.handleChange(this.props.name, e.target.name, e.target.value)\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Form.Group as={Col} className=\"input\" controlId=\"formInput\">\n                    <Form.Label>Value</Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        min={0}\n                        step={0.0000000001}\n                        name=\"const_val\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter constant value\"\n                    />\n                </Form.Group>\n            </Fragment>\n        )\n    }\n}\n\nexport default RandVar\n","import React, { Component } from 'react';\nimport { Form, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nclass ConstVar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n        };\n    }\n\n    static propTypes = {\n        handleChange: PropTypes.func,\n        name: PropTypes.string,\n        label: PropTypes.string,\n    };\n\n    handleChange = e => {\n        this.props.handleChange(this.props.name, e.target.value);\n    };\n\n    render() {\n        // text for a placeholder for each value input field\n        return (\n            <div className=\"form-group\">\n                <Form.Row style={{ width: '300px' }}>\n                    <Form.Group as={Col} controlId=\"formVal\" style={{}}>\n                        <Form.Label>\n                            <h6>{this.props.label}</h6>\n                        </Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min={-100}\n                            // ASK: currently using step value of 0.0001, should it be higher or lower?\n                            step={0.0000000001}\n                            placeholder=\"Enter value\"\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                </Form.Row>\n            </div>\n        );\n    }\n}\n\nclass NumRandVars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: 'numVars',\n            label: 'Number of Random Variables',\n            value: 0,\n        };\n    }\n\n    static propTypes = {\n        handleChange: PropTypes.func,\n    };\n\n    handleChange = e => {\n        var val = e.target.value;\n        this.props.handleChange(val);\n    };\n\n    render() {\n        return (\n            <div className=\"form-group\">\n                <Form.Group as={Col} controlId=\"form-numVars\">\n                    <Form.Label>Number of Random Variables</Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        min={0}\n                        placeholder=\"Enter value\"\n                        onChange={this.handleChange}\n                    />\n                </Form.Group>\n            </div>\n        );\n    }\n}\n\nclass Saturation extends React.Component {\n    static propTypes = {\n        handleChange: PropTypes.func,\n    };\n\n    handleChange = selectedOption => {\n        var selected = selectedOption.target.value;\n        if (selected === 'true') {\n            this.props.handleChange(true);\n        } else if (selected === 'false') {\n            this.props.handleChange(false);\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"form-group\">\n                <Form.Group as={Col} controlId=\"formDropDown\">\n                    <Form.Label>Soil Saturation</Form.Label>\n                    <Form.Control\n                        as=\"select\"\n                        className=\"input\"\n                        onChange={this.handleChange}\n                    >\n                        <option value=\"true\" defaultValue>\n                            Saturated\n                        </option>\n                        <option value=\"false\">Unsaturated</option>\n                    </Form.Control>\n                </Form.Group>\n            </div>\n        );\n    }\n}\n\nclass Analysis extends Component {\n    static propTypes = {\n        handleChange: PropTypes.func,\n    };\n\n    handleChange = selectedOption => {\n        var selected = selectedOption.target.value;\n        this.props.handleChange(selected);\n    };\n\n    render() {\n        return (\n            <div className=\"form-group\">\n                <Form.Group as={Col} controlId=\"formDropDown\">\n                    <Form.Label>Analysis Type</Form.Label>\n                    <Form.Control\n                        as=\"select\"\n                        className=\"input\"\n                        onChange={this.handleChange}\n                    >\n                        <option value=\"nondet\">Non-determinisitic</option>\n                        <option value=\"det\" defaultValue>\n                            Deterministic\n                        </option>\n                    </Form.Control>\n                </Form.Group>\n            </div>\n        );\n    }\n}\n\nexport { ConstVar, NumRandVars, Saturation, Analysis };\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Navbar } from 'react-bootstrap'\n\nclass Header extends Component {\n    static propTypes = {\n        title: PropTypes.string\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand className=\"navbar-brand\" href=\"#\">WSU Suction-Based LISA</Navbar.Brand>\n                    <Navbar.Toggle />\n                    <Navbar.Collapse >\n                        <Navbar.Text>\n                            {this.props.title}\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Navbar>\n            </>\n        )\n    }\n}\n\nexport default Header\n","var data = {\n    numVars: 1000,\n    conf: 'nondet',\n    sat: true,\n    randVars: {\n        c: {\n            dist: 'truncnormal',\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        c_r: {\n            dist: 'truncnormal',\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        phi: {\n            dist: 'truncnormal',\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        k_s: {\n            dist: 'truncnormal',\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        a: {\n            dist: 'truncnormal',\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        n: {\n            dist: 'truncnormal',\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        }\n    },\n    constVars: {\n        gamma: 0,\n        gamma_w: 0,\n        slope: 0,\n        flux: 0\n    }\n}\n// use this normally\nvar results = {\n    randVars: {\n        c: {\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        c_r: {\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        phi: {\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        k_s: {\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        a: {\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        },\n        n: {\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        }\n    },\n    z: {}\n}\n// datasets to use while testing\nvar testing = {\n    data: {\n        numVars: 1000,\n        sat: false,\n        conf: 'nondet',\n        randVars: {\n            c: {\n                dist: 'truncnormal',\n                low: 0,\n                high: 4,\n                mean: 1.058,\n                stdev: 0.647\n            },\n            c_r: {\n                dist: 'constant',\n                const_val: 0\n            },\n            phi: {\n                dist: 'truncnormal',\n                low: 30,\n                high: 48.9,\n                mean: 36.055,\n                stdev: 3.058\n\n            },\n            k_s: {\n                dist: 'constant',\n                const_val: 1e-6\n            },\n            a: {\n                dist: 'truncnormal',\n                low: 0.025,\n                high: 0.7,\n                mean: 0.323,\n                stdev: 0.093\n            },\n            n: {\n                dist: 'lognormal',\n                low: 1.672,\n                high: 7.78,\n                logmean: 1.302,\n                logstdev: 0.22\n            }\n        },\n        constVars: {\n            gamma: 18,\n            gamma_w: 9.81,\n            slope: 45,\n            // q: -6.5e-7,\n            q: 0,\n            H_wt: 5,\n            z_step: 0.2\n        }\n    }\n}\n\nexport { data, results, testing }\n","import axios from 'axios';\n\nconst DEBUG = 0;\n\nvar BASE_URL = 'https://wsu-suction-based-lisa.herokuapp.com';\nif (DEBUG) {\n    BASE_URL = 'http://127.0.0.1:5000';\n}\n\nexport default axios.create({\n    baseURL: BASE_URL,\n    timeout: 20000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n","const LABELS = {\n    c: 'C: Soil Cohesion (kPa)',\n    c_r: 'C_r: Root cohesion (kPa)',\n    phi: 'phi: Effective Angle of Friction (deg)',\n    k_s: 'k_s: Saturated Hydraulic Conductivity (m/s)',\n    a: 'alpha (1/kPa)',\n    n: 'n',\n    gamma: 'gamma: Soil Weight (kN/m3)',\n    gamma_w: 'gamma_w: Unit Weight of Water (kN/m3)',\n    slope: 'Beta: Slope (deg)',\n    q: 'q: Infiltration (m/s)',\n    H_wt: 'H_wt: Distance from surface to water table (m)',\n    z_step: 'Z Step: Used to calculate values to analysis values' +\n        'between 0 and H_wt (m)'\n}\n\nexport default LABELS\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unescaped-entities */\nimport React, { Component, Fragment } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport * as Vars from './variables'\nimport PropTypes from 'prop-types'\nimport Header from './Header'\nimport { testing } from '../resources/template'\n// import { data } from '../resources/template'\nimport AppMode from '../AppMode'\nimport API from './apiClient'\nimport LABELS from '../resources/labels'\n\n//  Random Variables:\n//    c, c_r, phi, k_s, a, n\n// Constant Variables:\n//    gamma, gamma_w, slope, z_step, H_wt\n// also, ask user for fluxes\n\nclass DataFormPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // data: data\n            data: testing.data\n        }\n    }\n\n    static propTypes = {\n        onSubmit: PropTypes.func,\n        apiClient: PropTypes.object,\n        changeMode: PropTypes.func\n    };\n\n    componentDidMount() {\n        if (this.state.data.conf === undefined) {\n            const newData = this.state.data\n            this.setState({ data: newData })\n        }\n    }\n\n    //  handling variable changes in data form when configuration\n    handleNondetChange = (varName, key, value) => {\n        var newData = this.state.data\n        newData.randVars[varName][key] = value\n        this.setState({ newData })\n    };\n\n    handleDetChange = (varName, val) => {\n        var newData = this.state.data\n        newData.randVars[varName].detVal = val\n        this.setState({ newData })\n    };\n\n    handleDistChange = (varName, selected) => {\n        var newData = this.state.data\n        newData.randVars[varName] = {\n            dist: selected,\n            low: 0,\n            high: 0,\n            mean: 0,\n            stdev: 0\n        }\n        this.setState(newData)\n    };\n\n    handleConstVarChange = (varName, value) => {\n        var newData = this.state.data\n        newData.constVars[varName] = value\n        this.setState(newData)\n    };\n\n    handleNumVarChange = number => {\n        var newData = this.state.data\n        newData.numVars = number\n        this.setState(newData)\n    };\n\n    handleZVarChange = (key, val) => {\n        var newData = this.state.data\n        newData.z[key] = val\n        this.setState(newData)\n    };\n\n    handleSatChange = val => {\n        var newData = this.state.data\n        newData.sat = val\n        this.setState(newData)\n    };\n\n    handleAnalysisChange = val => {\n        var newData = this.state.data\n        newData.conf = val\n        this.setState(newData)\n    };\n\n    handleFluxChange = (key, val) => {\n        var newData = this.state.data\n        newData.constVars.flux[key] = val\n\n        this.setState(newData)\n    };\n\n    handleFluxAdd = () => {\n        var newData = this.state.data\n        newData.constVars.flux.append(0)\n        this.setState(newData)\n    };\n\n    handleFluxRemove = index => {\n        var newData = this.state.data\n        if (index > -1) {\n            newData.constVars.flux.splice(index, 1)\n        }\n        this.setState(newData)\n    };\n\n    onSubmit = e => {\n        console.log(\n            \"submit has been clicked. attempting to post to '/api/add_data'\"\n        )\n        console.log('data being sent: ', this.state.data)\n        e.preventDefault()\n        API.post('/api/add_data', this.state.data).then(res => {\n            console.log(res)\n            this.props.changeMode(AppMode.DISPLAY)\n        })\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Header title=\"Data Form\" />\n                <div className=\"paddedPage\">\n                    <div className=\"myForm\">\n                        <Form>\n                            <Form.Row>\n                                <Vars.Saturation\n                                    handleChange={this.handleSatChange}\n                                />\n                                {/* <Vars.Analysis\n                                    handleChange={this.handleAnalysisChange}\n                                /> */}\n                                <Vars.NumRandVars\n                                    handleChange={this.handleNumVarChange}\n                                />\n                            </Form.Row>\n                            <Form.Row>\n                                <DataFormSelector\n                                    data={this.state.data}\n                                    handleNondetChange={this.handleNondetChange}\n                                    handleDetChange={this.handleDetChange}\n                                    handleDistChange={this.handleDistChange}\n                                    handleConstVarChange={\n                                        this.handleConstVarChange\n                                    }\n                                    handleZVarChange={this.handleZVarChange}\n                                />\n                            </Form.Row>\n\n                            <Button variant=\"primary\" onClick={this.onSubmit}>\n                                {' '}\n                                Submit{' '}\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nclass DataFormSelector extends Component {\n    static propTypes = {\n        handleNondetChange: PropTypes.func,\n        handleDetChange: PropTypes.func,\n        handleDistChange: PropTypes.func,\n        handleConstVarChange: PropTypes.func,\n        handleZVarChange: PropTypes.func,\n        handleFluxChange: PropTypes.func,\n        handleFluxRemove: PropTypes.func\n    };\n\n    render() {\n        const sat = this.props.data.sat\n        const conf = this.props.data.conf\n        if (sat === false) {\n            return (\n                <Fragment>\n                    <div className=\"rand-vars\">\n                        <Vars.RandVar\n                            data={this.props.data.randVars.c}\n                            conf={conf}\n                            name=\"c\"\n                            label={LABELS.c}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n\n                        <Vars.RandVar\n                            data={this.props.data.randVars.c_r}\n                            conf={conf}\n                            name=\"c_r\"\n                            label={LABELS.c_r}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n\n                        <Vars.RandVar\n                            data={this.props.data.randVars.phi}\n                            conf={conf}\n                            name=\"phi\"\n                            label={LABELS.phi}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n\n                        <Vars.RandVar\n                            data={this.props.data.randVars.k_s}\n                            conf={conf}\n                            name=\"k_s\"\n                            label={LABELS.k_s}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n\n                        <Vars.RandVar\n                            data={this.props.data.randVars.a}\n                            conf={conf}\n                            name=\"a\"\n                            label={LABELS.a}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n                        <Vars.RandVar\n                            data={this.props.data.randVars.n}\n                            conf={conf}\n                            name=\"n\"\n                            label={LABELS.n}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n                    </div>\n\n                    <div className=\"const-vars\">\n                        <Vars.ConstVar\n                            name=\"gamma\"\n                            label={LABELS.gamma}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        <Vars.ConstVar\n                            name=\"gamma_w\"\n                            label={LABELS.gamma_w}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        <Vars.ConstVar\n                            name=\"slope\"\n                            label={LABELS.slope}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        <Vars.ConstVar\n                            name=\"q\"\n                            label={LABELS.q}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        {/* <Vars.FluxVar\n                            name=\"flux\"\n                            label={LABELS.q}\n                            handleRemove={this.handleFluxRemove}\n                            handleChange={this.handleFluxChange}\n                            handleAdd={this.handleAdd}\n                        /> */}\n                        <Vars.ConstVar\n                            name=\"H_wt\"\n                            label={LABELS.H_wt}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        <Vars.ConstVar\n                            name=\"z_step\"\n                            label={LABELS.z_step}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        {/* <ZVar handleChange={this.props.handleZVarChange} /> */}\n                    </div>\n                </Fragment>\n            )\n        } else if (sat === true) {\n            return (\n                <Fragment>\n                    <div className=\"rand-vars\">\n                        <Vars.RandVar\n                            data={this.props.data.randVars.c}\n                            conf={conf}\n                            name=\"c\"\n                            label={LABELS.c}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n\n                        <Vars.RandVar\n                            data={this.props.data.randVars.c_r}\n                            conf={conf}\n                            name=\"c_r\"\n                            label={LABELS.c_r}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n\n                        <Vars.RandVar\n                            data={this.props.data.randVars.phi}\n                            conf={conf}\n                            name=\"phi\"\n                            label={LABELS.phi}\n                            handleNondetChange={this.props.handleNondetChange}\n                            handleDetChange={this.props.handleDetChange}\n                            handleDistChange={this.props.handleDistChange}\n                        />\n                    </div>\n\n                    <div className=\"const-vars\">\n                        <Vars.ConstVar\n                            name=\"gamma\"\n                            label={LABELS.gamma}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        <Vars.ConstVar\n                            name=\"gamma_w\"\n                            label={LABELS.gamma_w}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        <Vars.ConstVar\n                            name=\"slope\"\n                            label={LABELS.slope}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        <Vars.ConstVar\n                            name=\"H_wt\"\n                            label={LABELS.H_wt}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        <Vars.ConstVar\n                            name=\"z_step\"\n                            label={LABELS.z_step}\n                            handleChange={this.props.handleConstVarChange}\n                        />\n                        {/* <ZVar handleChange={this.props.handleZVarChange} /> */}\n                    </div>\n                </Fragment>\n            )\n        } else {\n            return <h3>Error: invalid configuration</h3>\n        }\n    }\n}\n\nexport default DataFormPage\n","const UNITS = {\n    c: 'kPa',\n    c_r: 'kPa',\n    phi: 'deg',\n    k_s: 'm/s',\n    a: '1/kPa',\n    n: '',\n    gamma: 'kN/m3',\n    gamma_w: 'kN/m3',\n    slope: 'deg',\n    q: 'm/s',\n    H_wt: 'm',\n    z_step: 'm'\n}\n\nexport default UNITS\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport * as V from 'victory'\nimport Select from 'react-select'\nimport UNITS from '../../resources/units'\n\n// NON-DET data looks like:\n/*\nrandVars: {\n    \"a\": {\n        \"high\": _,\n        \"low\": _,\n        \"mean\": _,\n        \"stdev\": _,\n        \"vals\": [...]\n    },\n    \"c\": {...},\n    \"c_r\": {...},\n    ...\n}\n*/\n// DET data looks like\n/*\n    {\n        conf: 'det',\n        sat: False,\n        randVars: {\n            \"a\" 1,\n            ...\n        }\n    }\n\n*/\n\nclass RVDistGraph extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selected: ''\n        }\n    }\n\n    static propTypes = {\n        data: PropTypes.object,\n        conf: PropTypes.string\n    };\n\n    setOptions = () => {\n        const options = []\n        for (const key in this.props.data) {\n            options.push({ value: key, label: key })\n        }\n        return options\n    };\n\n    handleChange = e => {\n        const selected = e.value\n        this.setState({\n            selected: selected\n        })\n    };\n\n    render() {\n        const selectedOption = this.state.selected\n        const options = this.setOptions()\n\n        const curData = this.props.data[selectedOption]\n        return (\n            <Fragment>\n                <div className=\"dropdown\">\n                    <Select\n                        // defaultValue={options[0]}\n                        selectedOption={this.state.selected}\n                        options={options}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                {selectedOption !== '' ? (\n                    <>\n                        <RVBar\n                            data={this.props.data}\n                            rv={selectedOption}\n                            conf={this.props.conf}\n                        />\n                    </>\n                ) : (\n                        <></>\n                    )}\n            </Fragment>\n        )\n    }\n}\n\n// NON-DET\n// data looks like\n/*\nrandVars: {\n    \"a\": {\n        \"high\": _,\n        \"low\": _,\n        \"mean\": _,\n        \"stdev\": _,\n        \"vals\": [...]\n    },\n    \"c\": {...},\n    \"c_r\": {...},\n    ...\n}\n*/\n\n// DET data looks like\n/*\n    {\n        conf: 'det',\n        sat: False,\n        randVars: {\n            \"a\" 1,\n            ...\n        }\n    }\n*/\nclass RVBar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datapoints: [],\n            rv: ''\n        }\n    }\n\n    static propTypes = {\n        data: PropTypes.object,\n        rv: PropTypes.string,\n        conf: PropTypes.string\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.rv !== prevState.rv) {\n            if (nextProps.conf === 'nondet') {\n                const valsArr = nextProps.data[nextProps.rv].vals\n                const freqObj = {}\n                valsArr.forEach(x => {\n                    if (nextProps.rv === 'k_s') {\n                        const rounded = x.toExponential(2)\n                        if (!freqObj[rounded]) {\n                            freqObj[rounded] = 1\n                        } else {\n                            freqObj[rounded] += 1\n                        }\n                    } else {\n                        let rounded = 0.0\n                        rounded = x.toFixed(2)\n                        if (!freqObj[rounded]) {\n                            freqObj[rounded] = 1\n                        } else {\n                            freqObj[rounded] += 1\n                        }\n                    }\n                })\n\n                const datapoints = []\n                for (const key in freqObj) {\n                    datapoints.push({ x: Number(key), y: freqObj[key] })\n                }\n                // this.setState({ datapoints: datapoints })\n                return { datapoints: datapoints, rv: nextProps.rv }\n            } else if (nextProps.conf === 'det') {\n                var val = nextProps.data[nextProps.rv]\n                if (nextProps.rv !== 'k_s') {\n                    val = val.toFixed(2)\n                } else {\n                    val = val.toExponential(2)\n                }\n                const datapoints = [{ x: Number(val), y: 1 }]\n                return { datapoints: datapoints, rv: nextProps.rv }\n            } else {\n                console.error('ERROR: invalid conf: ', nextProps.conf)\n            }\n        } else return null\n    }\n\n    getTickFormat = t => {\n        const rv = this.state.rv\n        if (rv === 'k_s') {\n            return t.toExponential(2)\n        } else if (rv === 'c' || rv === 'c_r' || rv === 'phi') {\n            return t.toFixed(1)\n        } else if (rv === 'a' || rv === 'n') {\n            return t.toFixed(3)\n        } else return t\n    };\n\n    render() {\n        // const l = `${this.state.rv} Distribution`;\n        var dist = null\n        if (this.props.conf === 'nondet') {\n            dist = <h5>{this.props.data[this.state.rv].dist}</h5>\n        }\n        return (\n            <div className=\"graph\">\n                <h4>Distribution Graph for {this.state.rv}</h4>{' '}\n                {dist !== null ? dist : null}\n                <V.VictoryChart\n                    domainPadding={20}\n                    overflow=\"visible\"\n                    theme={V.VictoryTheme.material}\n                    containerComponent={\n                        <V.VictoryVoronoiContainer\n                            labels={({ datum }) => `${datum.x} ${datum.y}`}\n                        />\n                    }\n                >\n                    <V.VictoryBar\n                        // style={{ data:}}\n                        data={this.state.datapoints}\n                    />\n                    <V.VictoryAxis\n                        label={UNITS[this.state.rv]}\n                        style={{\n                            axisLabel: { padding: 30 }\n                        }}\n                        tickFormat={t => this.getTickFormat(t)}\n                        tickCount={this.props.conf === 'det' ? 1 : null}\n                    />\n\n                    <V.VictoryAxis\n                        dependentAxis\n                        label=\"Count\"\n                        style={{\n                            axisLabel: { padding: 40 }\n                        }}\n                    />\n                </V.VictoryChart>\n            </div>\n        )\n    }\n}\n\nexport default RVDistGraph\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport * as V from 'victory'\nimport Select from 'react-select'\n\nclass FOSFreq extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datapoints: [],\n            selected: ''\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    static propTypes = {\n        data: PropTypes.object,\n        conf: PropTypes.string\n    };\n\n    componentDidMount = () => {\n        // this.initComp(this.)\n    };\n\n    setOptions = () => {\n        const options = []\n\n        // sort options\n        var sorted = []\n        for (const key in this.props.data) {\n            sorted.push(key)\n        }\n\n        sorted.sort()\n        sorted.forEach(e => {\n            options.push({ value: e, label: e })\n        })\n\n        return options\n    };\n\n    handleChange = e => {\n        this.setState({\n            selected: e.value\n        })\n    };\n\n    render() {\n        const options = this.setOptions()\n        return (\n            <div>\n                <div className=\"dropdown\">\n                    <Select\n                        selectedOption={this.state.selected}\n                        options={options}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                {this.state.selected !== '' ? (\n                    <>\n                        <FreqHistFOS\n                            z={this.state.selected}\n                            data={this.props.data}\n                            conf={this.props.conf}\n                        />\n                    </>\n                ) : (\n                        <></>\n                    )}\n            </div>\n        )\n    }\n}\n\nclass FreqHistFOS extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datapoints: [],\n            z: ''\n        }\n    }\n\n    static propTypes = {\n        data: PropTypes.object,\n        conf: PropTypes.string,\n        z: PropTypes.string\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.z !== prevState.z) {\n            const z = nextProps.z\n            if (nextProps.conf === 'nondet') {\n                const valsArr = nextProps.data[z].fs_vals\n\n                const freqObj = {}\n                valsArr.forEach(x => {\n                    const rounded = x.toFixed(2)\n                    if (!freqObj[rounded]) {\n                        freqObj[rounded] = 1\n                    } else {\n                        freqObj[rounded] += 1\n                    }\n                })\n\n                const datapoints = []\n                for (const key in freqObj) {\n                    datapoints.push({ x: Number(key), y: freqObj[key] })\n                }\n                return { datapoints: datapoints, z: nextProps.z }\n            } else if (nextProps.conf === 'det') {\n                const val = nextProps.data[z].toFixed(2)\n\n                const datapoint = [{ x: Number(z), y: val }]\n                return { datapoints: datapoint, z: nextProps.z }\n            } else {\n                console.error(\n                    'ERROR: incorrect configuration type: ',\n                    nextProps.conf\n                )\n            }\n        } else return null\n    }\n\n    getCount = () => {\n        var max = 0\n        const dp = this.state.datapoints\n        dp.forEach(x => {\n            if (x.y > max) {\n                max = x.y\n            }\n        })\n\n        // example: max = 41\n        // want [5, 10, 15, 20, 25, 30, 35, 40]\n        const list = []\n        for (var i = 0; i < max; i++) {\n            if (i % 5 === 0) {\n                list.push(i)\n            }\n        }\n        return list\n    };\n\n    render() {\n        return (\n            <div className=\"graph\">\n                <V.VictoryChart\n                    theme={V.VictoryTheme.material}\n                    domainPadding={20}\n                    containerComponent={\n                        <V.VictoryVoronoiContainer\n                            labels={({ datum }) => `${datum.x} ${datum.y}`}\n                        />\n                    }\n                >\n                    <V.VictoryBar data={this.state.datapoints} />\n                    <V.VictoryAxis\n                        label=\"Factor of Safety\"\n                        tickValues={[1]}\n                        tickFormat={t => t}\n                        style={{\n                            axisLabel: { padding: 30 }\n                        }}\n                    />\n                    <V.VictoryAxis\n                        dependentAxis\n                        label=\"Frequency\"\n                        tickCount={this.getCount().length}\n                        style={{\n                            axisLabel: { padding: 40 }\n                        }}\n                    />\n                </V.VictoryChart>\n            </div>\n        )\n    }\n}\n\nexport default FOSFreq\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport * as V from 'victory'\n\nclass PFbyZ extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datapoints: [],\n            tickValues: []\n        }\n    }\n\n    static propTypes = {\n        data: PropTypes.object,\n        conf: PropTypes.string,\n        H_wt: PropTypes.number\n    };\n\n    detGetDatapoints = () => {\n        const data = this.props.data\n        const dp = []\n        for (const key in data) {\n            if (data[key] >= 1) {\n                dp.push({ x: 1, y: key })\n            } else {\n                dp.push({ x: 0, y: key })\n            }\n        }\n        return dp\n    };\n\n    componentDidMount = () => {\n        const vals = this.props.data\n        var dp = []\n        if (this.props.conf === 'nondet') {\n            for (const key in vals) {\n                dp.push({ x: vals[key].probFail, y: key })\n            }\n        } else if (this.props.conf === 'det') {\n            dp = this.detGetDatapoints()\n        }\n        const ticks = this.getTickVals()\n        this.setState({ datapoints: dp, tickValues: ticks })\n    };\n\n    getTickVals = () => {\n        const max = this.props.H_wt\n        const ticks = []\n        var cur = 0\n        while (cur <= max) {\n            ticks.push(cur)\n            cur += 0.5\n        }\n        return ticks\n    }\n\n    printTicks(t) {\n        if (Number(t) % 1 === 0) {\n            return Number(t)\n        } else {\n            return null\n        }\n    }\n\n    render() {\n        const dp = this.state.datapoints\n        const sharedAxisStyles = {\n            tickLabels: {\n                fontSize: 12\n            },\n            axisLabel: {\n                padding: 39,\n                fontSize: 12,\n                fontStyle: 'bold'\n            }\n        }\n        if (dp.length > 0) {\n            return (\n                <div className=\"graph\">\n                    <h4>Depth vs. Probability of Failure</h4>\n                    <V.VictoryChart\n                        domainPadding={20}\n                        theme={V.VictoryTheme.material}\n                        containerComponent={\n                            <V.VictoryVoronoiContainer\n                                labels={({ datum }) => `${datum.x} ${datum.y}`}\n                            />\n                        }\n                    >\n                        <V.VictoryScatter\n                            style={{\n                                data: { stroke: '#c43a31' },\n                                parent: { border: '1px solid #ccc' }\n                            }}\n                            data={dp} />\n                        <V.VictoryAxis\n                            label=\"Probability of Failure\"\n                            style={sharedAxisStyles}\n                            orientation=\"top\"\n                            tickValues={[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]}\n                        />\n                        <V.VictoryAxis\n                            dependentAxis\n                            label=\"Soil Depth from surface, H_ss (m)\"\n                            tickCount={this.props.H_wt + 1}\n                            tickFormat={t => t}\n\n                            // tickCount={\n                            //     this.props.H_wt * 2\n                            //     // this.state.datapoints.length > 10\n                            //     //     ? this.state.datapoints.length / 2\n                            //     //     : this.state.datapoints.length\n                            // }\n                            style={sharedAxisStyles}\n                            invertAxis={true}\n                        />\n                    </V.VictoryChart>\n                </div>\n            )\n\n        } else {\n            return <h2>no datapoints</h2>\n        }\n    }\n}\n\nexport default PFbyZ\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport * as V from 'victory'\n\nclass SSbyZ extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datapoints: []\n        }\n    }\n\n    static propTypes = {\n        data: PropTypes.object,\n        conf: PropTypes.string,\n        sat: PropTypes.bool,\n        H_wt: PropTypes.number\n    };\n\n    componentDidMount = () => {\n        if (this.props.sat === false) {\n            const vals = this.props.data\n            var dp = []\n            if (this.props.conf === 'nondet') {\n                for (const z in vals) {\n                    dp.push({ x: -vals[z].ss, y: z })\n                    // for (const ss in vals[z].ss_vals) {\n                    //     dp.push({ x: vals[z].ss_vals[ss], y: z });\n                    // }\n                }\n            } else if (this.props.conf === 'det') {\n                for (const z in vals) {\n                    dp.push({ x: -vals[z].ss, y: z })\n                }\n            }\n\n            this.setState({ datapoints: dp })\n        }\n    };\n\n\n    getMaxSS = dp => {\n        let max = 0\n        dp.map(key => {\n            if (key.x > max) {\n                max = key.x\n            }\n        })\n        return max\n    }\n\n    render() {\n        const sat = this.props.sat\n\n        if (sat === true) {\n            return (\n                <h2>\n                    This graph is only available for unsaturated soil analysis\n                </h2>\n            )\n        }\n\n\n        const dp = this.state.datapoints\n        if (dp.length > 0) {\n            const ticks = [...Array(Math.ceil(this.props.H_wt)).keys()]\n            const maxSS = this.getMaxSS(dp)\n\n            return (\n                <div className=\"graph\">\n                    <h4>Depth vs. Suction Stress</h4>\n                    <V.VictoryChart\n                        domainPadding={20}\n                        theme={V.VictoryTheme.material}\n                        containerComponent={\n                            <V.VictoryVoronoiContainer\n                                labels={({ datum }) => `${datum.x} ${datum.y}`}\n                            />\n                        }\n                    >\n                        <V.VictoryScatter\n                            style={{\n                                data: { stroke: '#c43a31' },\n                                parent: { border: '1px solid #ccc' }\n                            }}\n                            data={dp}\n                            // get x min with func\n                            domain={{ x: [0, maxSS], y: [0, this.props.H_wt] }}\n                            interpolation=\"natural\"\n                        />\n                        <V.VictoryAxis\n                            label=\"Suction Stress (-kPa)\"\n                            style={{\n                                axisLabel: { padding: 30 }\n                            }}\n                            orientation=\"top\"\n                        />\n                        <V.VictoryAxis\n                            dependentAxis\n                            label=\"Soil Depth from Surface H_ss (m)\"\n                            tickCount={this.props.H_wt}\n                            tickFormat={t => t}\n                            style={{\n                                axisLabel: { padding: 40 }\n                            }}\n                            invertAxis={true}\n                        />\n                    </V.VictoryChart>\n                </div>\n            )\n        } else {\n            return <h2>no datapoints</h2>\n        }\n    }\n}\n\nexport default SSbyZ\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport * as V from 'victory'\n\nclass SSbySe extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datapoints: []\n        }\n    }\n\n    static propTypes = {\n        sat: PropTypes.bool,\n        H_wt: PropTypes.number,\n        conf: PropTypes.string,\n        data: PropTypes.object\n    }\n\n    componentDidMount = () => {\n        if (this.props.sat === false) {\n            const vals = this.props.data\n            var dp = []\n            for (const z in vals) {\n                dp.push({ x: vals[z].Se, y: -vals[z].ss })\n            }\n        }\n\n        this.setState({ datapoints: dp })\n    };\n\n\n    getMaxSS = dp => {\n        let max = 0\n        dp.map(key => {\n            if (key.y > max) {\n                max = key.y\n            }\n        })\n        return max\n    }\n\n    render() {\n\n        const sat = this.props.sat\n\n        if (sat === true) {\n            return (\n                <h2>\n                    This graph is only available for unsaturated soil analysis\n                </h2>\n            )\n        }\n\n        const dp = this.state.datapoints\n        const maxSS = Math.ceil(this.getMaxSS(dp))\n        if (dp.length > 0) {\n            const ticks = [...Array(Math.ceil(this.props.H_wt)).keys()]\n\n            return (\n                <div className=\"graph\">\n                    <h4>Suction Stress vs Se</h4>\n                    <V.VictoryChart\n                        domainPadding={20}\n                        theme={V.VictoryTheme.material}\n                        containerComponent={\n                            <V.VictoryVoronoiContainer\n                                labels={({ datum }) => `${datum.x} ${datum.y}`}\n                            />\n                        }\n                    >\n                        <V.VictoryScatter\n                            style={{\n                                data: { stroke: '#c43a31' },\n                                parent: { border: '1px solid #ccc' }\n                            }}\n                            data={dp}\n                            // get x min with func\n                            domain={{ x: [0, 1], y: [0, maxSS] }}\n                            interpolation=\"natural\"\n                        />\n                        <V.VictoryAxis\n                            label=\"Se\"\n                            tickCount={10}\n                            style={{\n                                axisLabel: { padding: 30 }\n                            }}\n                        />\n                        <V.VictoryAxis\n                            dependentAxis\n                            label=\"Suction Stress (-kPa)\"\n                            tickCount={this.props.H_wt + 1}\n                            tickFormat={t => t}\n                            style={{\n                                axisLabel: { padding: 40 }\n                            }}\n                        // invertAxis={true}\n                        />\n                    </V.VictoryChart>\n                </div>\n            )\n        } else {\n            return <h2>no datapoints</h2>\n        }\n    }\n}\n\nexport default SSbySe\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Tab, Tabs } from 'react-bootstrap'\nimport * as Graphs from './graphs'\nimport { CSVLink } from 'react-csv'\n\nclass DisplayGraphs extends Component {\n    static propTypes = {\n        data: PropTypes.object,\n        apiClient: PropTypes.object\n    };\n\n    getGraphDownloadData = () => {\n        const data = this.props.data\n        var csvData = []\n        if (data !== null) {\n            const headers = ['z: soil depth from surface (m)', 'probability of failure', 'suction stress (kPa)', 'Se']\n            const curZ = data.z\n            csvData.push(headers)\n\n            for (const key in curZ) {\n                var row = [key, curZ[key].probFail, curZ[key].ss, curZ[key].Se]\n                csvData.push(row)\n            }\n        } else {\n            csvData = ['Error saving data']\n        }\n        return csvData\n    }\n\n    render() {\n        return (\n            <div>\n                <Tabs defaultActiveKey=\"freqHistFos\" id=\"visualizations\">\n                    <Tab\n                        eventKey=\"freqHistFos\"\n                        title=\"Factor of Safety Frequency Histograms\"\n                    >\n                        <Graphs.FOSFreq\n                            data={this.props.data.z}\n                            conf={this.props.data.conf}\n                        />\n                    </Tab>\n                    <Tab\n                        eventKey=\"freqHistRV\"\n                        title=\"Random Variable Frequency Histograms\"\n                    >\n                        <Graphs.RVDist\n                            data={this.props.data.randVars}\n                            conf={this.props.data.conf}\n                        />\n                    </Tab>\n\n                    <Tab\n                        eventKey=\"probFail/z\"\n                        title=\"Depth vs. Probability of Failure\"\n                    >\n                        <Graphs.PFbyZ\n                            data={this.props.data.z}\n                            conf={this.props.data.conf}\n                            H_wt={this.props.data.H_wt}\n                        />\n                    </Tab>\n                    <Tab eventKey=\"ss/z\" title=\"Depth vs. Suction Stress\">\n                        <Graphs.SSbyZ\n                            data={this.props.data.z}\n                            conf={this.props.data.conf}\n                            sat={this.props.data.sat}\n                            H_wt={this.props.data.H_wt}\n                        />\n                    </Tab>\n                    <Tab eventKey=\"ss/Se\" title=\"Suction Stress vs. Se\">\n                        <Graphs.SSbySe\n                            data={this.props.data.z}\n                            conf={this.props.data.conf}\n                            sat={this.props.data.sat}\n                            H_wt={this.props.data.H_wt}\n                        />\n                    </Tab>\n                </Tabs>\n                <ul></ul>\n                <CSVLink data={this.getGraphDownloadData()} >Download all graph data</CSVLink>\n            </div>\n        )\n    }\n}\n\nexport default DisplayGraphs\n","import React, { Component } from 'react'\nimport PropType from 'prop-types'\nimport { Table } from 'react-bootstrap'\nimport { CSVLink } from 'react-csv';\n\nclass FOSTable extends Component {\n    static propTypes = {\n        data: PropType.object,\n        conf: PropType.string\n    };\n\n    getFSDownloadData = () => {\n        const data = this.props.data\n        var csvData = []\n        if (data !== {} && data !== undefined) {\n            const headers = ['z', 'FS low', 'FS high', 'mean', 'stdev', 'probability of failure']\n            csvData.push(headers)\n            for (const key in data) {\n                const fs = data[key]\n                const row = [key, fs.low, fs.high, fs.mean, fs.stdev, fs.probFail]\n                csvData.push(row)\n            }\n        } else {\n            csvData = ['Error downloading Factor of Safety data!']\n        }\n        return csvData\n    }\n\n    getRows = conf => {\n        var list = []\n        var sortedZ = []\n\n        for (const key in this.props.data) {\n            sortedZ.push(key)\n        }\n        sortedZ.sort()\n        for (var key in sortedZ) {\n            var i = sortedZ[key]\n            if (conf === 'nondet') {\n                list.push(\n                    <FSRowDisplay\n                        key={i}\n                        z={i}\n                        data={this.props.data[i]}\n                        conf={conf}\n                    />\n                )\n            } else if (conf === 'det') {\n                list.push(\n                    <FSRowDisplay\n                        key={i}\n                        z={i}\n                        val={this.props.data[i]}\n                        conf={conf}\n                    />\n                )\n            }\n        }\n        return list\n    };\n\n    render() {\n        const conf = this.props.conf\n        const csvData = this.getFSDownloadData()\n\n        if (conf === 'nondet') {\n            return (\n                <div className=\"paddedPage displayTable\">\n                    <Table striped hover bordered size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>Z</th>\n                                <th>FS Low</th>\n                                <th>FS High</th>\n                                <th>FS Mean</th>\n                                <th>FS Stdev</th>\n                                <th>Probability of Failure</th>\n                            </tr>\n                        </thead>\n                        <tbody>{this.getRows(conf)}</tbody>\n                    </Table>\n                    <CSVLink data={csvData} >Download Factor of Safety data</CSVLink>\n                </div>\n            )\n        } else if (conf === 'det') {\n            return (\n                <div className=\"paddedPage displayTable\">\n                    <Table striped hover bordered size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>Z</th>\n                                <th>Value</th>\n                                <th>Probability of Failure</th>\n                            </tr>\n                        </thead>\n                        <tbody>{this.getRows(conf)}</tbody>\n                    </Table>\n                </div>\n            )\n        } else {\n            return <p>Error: invalid conf value - {conf}</p>\n        }\n    }\n}\n\nclass FSRowDisplay extends React.Component {\n    static propTypes = {\n        data: PropType.object,\n        z: PropType.string,\n        conf: PropType.string,\n        val: PropType.number\n    };\n\n    render() {\n        if (this.props.conf === 'nondet') {\n            return (\n                <tr>\n                    <td>\n                        {' '}\n                        <b>{this.props.z}</b>\n                    </td>\n                    <td>{this.props.data.low}</td>\n                    <td>{this.props.data.high}</td>\n                    <td>{this.props.data.mean}</td>\n                    <td>{this.props.data.stdev}</td>\n                    <td>{this.props.data.probFail}</td>\n                </tr>\n            )\n        } else if (this.props.conf === 'det') {\n            return (\n                <tr>\n                    <td>\n                        {' '}\n                        <b>{this.props.z}</b>\n                    </td>\n                    <td>{this.props.val}</td>\n                    <td>{this.props.val < 1 ? 0 : 1}</td>\n                </tr>\n            )\n        } else {\n            return <p>Error: invalid analysis type</p>\n        }\n    }\n}\n\nexport default FOSTable\n","import React, { Component, Fragment } from 'react'\nimport PropType from 'prop-types'\nimport { Table } from 'react-bootstrap'\nimport LABELS from '../../resources/labels'\nimport { CSVLink } from 'react-csv';\n\nclass RVTable extends Component {\n    static propTypes = {\n        data: PropType.object,\n        sat: PropType.bool,\n        conf: PropType.string\n    };\n\n    getRVDownloadData = () => {\n        const data = this.props.data\n        var csvData = []\n        if (data !== {} && data !== undefined) {\n            const headers = ['variable name', 'low', 'high', 'mean', 'stdev']\n            csvData.push(headers)\n            for (const key in data) {\n                const rv = data[key]\n                const row = [key, rv.low, rv.high, rv.mean, rv.stdev]\n                csvData.push(row)\n            }\n        } else {\n            csvData = ['Error saving random variable data']\n        }\n        return csvData\n    }\n\n    detRows = sat => {\n        if (sat === true) {\n            return (\n                <Fragment>\n                    <RandVarRowDisplayDet\n                        data={this.props.data.c}\n                        label={LABELS.c}\n                    />\n                    <RandVarRowDisplayDet\n                        data={this.props.data.c_r}\n                        label={LABELS.c_r}\n                    />\n                    <RandVarRowDisplayDet\n                        data={this.props.data.phi}\n                        label={LABELS.phi}\n                    />\n                </Fragment>\n            )\n        } else if (sat === false) {\n            return (\n                <Fragment>\n                    <RandVarRowDisplayDet\n                        data={this.props.data.c}\n                        label={LABELS.c}\n                    />\n                </Fragment>\n            )\n        }\n    };\n\n    getRows = (vars, conf) => {\n        const list = []\n        for (let key in vars) {\n            key = vars[key]\n            var i = this.props.data[key]\n\n            if (conf === 'det') {\n                list.push(\n                    <RandVarRowDisplayDet\n                        key={key}\n                        rv={key}\n                        value={this.props.data[key]}\n                        label={LABELS[key]}\n                    />\n                )\n            } else if (conf === 'nondet') {\n                list.push(\n                    <RandVarRowDisplayNondet\n                        key={key}\n                        rv={key}\n                        data={this.props.data[key]}\n                        label={LABELS[key]}\n                    />\n                )\n            } else {\n                list.push(<p>Error: invalid Analysis Type</p>)\n            }\n        }\n        return list\n    };\n\n    getTable = (sat, conf) => {\n        var vars = []\n\n        sat === true\n            ? (vars = ['c', 'c_r', 'phi'])\n            : (vars = ['c', 'c_r', 'phi', 'k_s', 'a', 'n'])\n\n        if (conf === 'det') {\n            return (\n                <Fragment>\n                    <Table striped hover bordered size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>Random Variable</th>\n                                <th>Value</th>\n                            </tr>\n                        </thead>\n                        <tbody>{this.getRows(vars, conf)}</tbody>\n                    </Table>\n                </Fragment>\n            )\n        } else if (conf === 'nondet') {\n            return (\n                <Fragment>\n                    <Table striped hover bordered size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>Random Variable</th>\n                                <th>Low</th>\n                                <th>High</th>\n                                <th>Mean</th>\n                                <th>Stdev</th>\n                            </tr>\n                        </thead>\n                        <tbody>{this.getRows(vars, conf)}</tbody>\n                    </Table>\n                </Fragment>\n            )\n        }\n    };\n\n    render() {\n        const sat = this.props.sat\n        const conf = this.props.conf\n\n        const table = this.getTable(sat, conf)\n\n        const csvData = this.getRVDownloadData()\n\n        return (\n            <Fragment>\n                <div className=\"paddedPage\">\n                    <div className=\"displayTable\">{table}</div>\n                    <CSVLink data={csvData} >Download Variable Data</CSVLink>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nclass RandVarRowDisplayDet extends Component {\n    static propTypes = {\n        value: PropType.number,\n        label: PropType.string,\n        key: PropType.string\n    };\n\n    render() {\n        if (this.props.key === 'k_s') {\n            return (\n                <tr>\n                    <td>\n                        <b>{this.props.label}</b>\n                    </td>\n                    <td>{this.props.value.toExponential(2)}</td>\n                </tr>\n            )\n        } else {\n            return (\n                <tr>\n                    <td>\n                        <b>{this.props.label}</b>\n                    </td>\n                    <td>{this.props.value}</td>\n                </tr>\n            )\n        }\n    }\n}\n\nclass RandVarRowDisplayNondet extends React.Component {\n    static propTypes = {\n        data: PropType.object,\n        label: PropType.string,\n        rv: PropType.string\n    };\n\n    render() {\n        if (this.props.rv === 'k_s') {\n            return (\n                <tr>\n                    <td>\n                        <b>{this.props.label}</b>\n                    </td>\n                    <td>{Number(this.props.data.low).toExponential(2)}</td>\n                    <td>{Number(this.props.data.high).toExponential(2)}</td>\n                    <td>{Number(this.props.data.mean).toExponential(2)}</td>\n                    <td>{Number(this.props.data.stdev).toExponential(2)}</td>\n                </tr>\n            )\n        } else {\n            return (\n                <tr>\n                    <td>\n                        <b>{this.props.label}</b>\n                    </td>\n                    <td>{this.props.data.low}</td>\n                    <td>{this.props.data.high}</td>\n                    <td>{this.props.data.mean}</td>\n                    <td>{this.props.data.stdev}</td>\n                </tr>\n            )\n        }\n    }\n}\n\nexport default RVTable\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport FadeIn from 'react-fade-in'\n\nimport { Spinner, Card } from \"@blueprintjs/core\"\n\nclass Loading extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: undefined,\n            done: undefined\n        }\n    }\n\n    static propTypes = {\n        loading: PropTypes.bool\n    }\n\n    render() {\n        return (\n            <Card className=\"loading-card bp3-elevation-2\">\n                <FadeIn>\n                    <div className=\"d-flex justify-content'-center align-items-center\">\n                        <h4>Fetching Results</h4>\n                        {!this.props.loading && (\n                            <Spinner className=\"styledSpinner\" intent=\"primary\" size={Spinner.SIZE_STANDARD} />\n                        )}\n                    </div>\n                </FadeIn>\n            </Card>\n        )\n    }\n}\n\nexport default Loading\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { Component, Fragment } from 'react'\nimport PropType from 'prop-types'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Header from './Header'\nimport DisplayGraphs from './DisplayGraphs'\nimport API from './apiClient'\nimport * as Tables from './tables'\nimport Loading from './Loading'\nimport { CSVLink } from 'react-csv'\n\nclass DisplayPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: null,\n            loading: undefined,\n            done: undefined\n        }\n    }\n\n    static propTypes = {\n        apiClient: PropType.object\n    };\n\n    getGraphDownloadData = () => {\n        const data = this.state.data\n        var csvData = []\n        if (data !== null) {\n            const headers = ['z: soil depth from surface (m)', 'probability of failure', 'suction stress (kPa)', 'Se']\n            const curZ = data.z\n            csvData.push(headers)\n\n            for (const key in curZ) {\n                var row = [key, curZ[key].probFail, curZ[key].ss, curZ[key].Se]\n                csvData.push(row)\n            }\n        } else {\n            csvData = ['Error saving data']\n        }\n        return csvData\n    }\n\n    componentDidMount = () => {\n        setTimeout(() => {\n            this.getResults().then(r => {\n                const newData = r.results\n                setTimeout(() => {\n                    this.setState({ data: newData, done: true })\n                }, 1000)\n            })\n        }, 2000)\n    };\n\n    getResults = async () => {\n        this.setState({ loading: true })\n        try {\n            const res = await API.get('/api/display')\n\n            return res.data\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    render() {\n        if (!this.state.done) {\n            return (\n                <Loading loading={this.state.loading} />\n            )\n        } else {\n            return (\n                <Fragment>\n                    <Header title=\"Display\" />\n                    <div className=\"paddedPage\">\n                        <Tabs defaultActiveKey=\"randVars\" id=\"display-tabs\">\n                            <Tab eventKey=\"randVars\" title=\"Random Variables\">\n                                <Tables.RVTable\n                                    data={this.state.data.randVars}\n                                    sat={this.state.data.sat}\n                                    conf={this.state.data.conf}\n                                />\n                            </Tab>\n                            <Tab eventKey=\"FS\" title=\"Factor of Safety by Z\">\n                                <Tables.FOSTable\n                                    data={this.state.data.z}\n                                    conf={this.state.data.conf}\n                                />\n                            </Tab>\n                            <Tab eventKey=\"graphs\" title=\"Visualizations\">\n                                <DisplayGraphs data={this.state.data} />\n                            </Tab>\n                        </Tabs>\n                    </div>\n                </Fragment>\n            )\n        }\n    }\n}\n\nexport default DisplayPage\n","import React, { Component, Fragment } from 'react'\nimport AppMode from '../AppMode'\nimport WelcomePage from './Welcome.jsx'\nimport DataFormPage from './DataForm.jsx'\nimport DisplayPage from './Display.jsx'\n// import API from './apiClient'\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     Redirect\n// } from 'react-router-dom'\n\nconst modeTitle = {}\n\nmodeTitle[AppMode.WELCOME] = 'Welcome to LISA'\nmodeTitle[AppMode.DATAFORM] = 'LISA Inputs'\nmodeTitle[AppMode.DISPLAY] = 'Display Data'\n\nconst modeToPage = {}\nmodeToPage[AppMode.WELCOME] = WelcomePage\nmodeToPage[AppMode.DATAFORM] = DataFormPage\nmodeToPage[AppMode.DISPLAY] = DisplayPage\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // for real.\n            mode: AppMode.DATAFORM\n            // mode: AppMode.DISPLAY\n            // results: null\n            // datasets to use while testing\n            // testing: testing\n        }\n    }\n\n    handleChangeMode = newMode => {\n        this.setState({ mode: newMode })\n    };\n\n    render() {\n        const ModePage = modeToPage[this.state.mode]\n        return (\n            <Fragment>\n                <ModePage\n                    mode={this.state.mode}\n                    changeMode={this.handleChangeMode}\n                    // onSubmit={this.onSubmit}\n                />\n                {/* <DisplayPage\n                        // data={this.state.testing.results}\n                        data={this.state.results}\n                    /> */}\n                {/* <Switch>\n                    <Route path=\"/\">\n                        <DataFormPage\n                            mode={this.state.mode}\n                            changeMode={this.handleChangeMode}\n                            onSubmit={this.onSubmit}\n                        />\n                    </Route>\n                    <Route path=\"/results\">\n                        <DisplayPage data={this.state.results} />\n\n                    </Route>\n                </Switch> */}\n            </Fragment>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './styles/App.css'\nimport './styles/index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('app')\n)\nif (module.hot) {\n    module.hot.accept()\n}\n"],"sourceRoot":""}